
name: Flask CI/CD Pipeline

on:
  push:
    branches: [ main ]
  

permissions:
  contents: write
  security-events: write

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flask pytest

      - name: Run tests
        run: |
          # Placeholder for tests; replace with actual test command
          pytest --version  # Example: pytest tests/test_app.py

  vulnerability-scan:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy filesystem scan
        uses: aquasecurity/trivy-action@0.30.0
        with:
          scan-type: 'fs'
          format: 'sarif'
          output: 'trivy-fs-results.sarif'
          severity: 'HIGH,CRITICAL'
          ignore-unfixed: true

      - name: Upload Trivy filesystem scan results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-fs-results.sarif'

  docker-build-push:
    runs-on: ubuntu-latest
    needs: vulnerability-scan
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/flask-app:${{ github.sha }}

      - name: Run Trivy image scan
        uses: aquasecurity/trivy-action@0.30.0
        with:
          image-ref: ${{ secrets.DOCKER_USERNAME }}/flask-app:${{ github.sha }}
          format: 'json'
          output: 'trivy-image-results.json'
          severity: 'HIGH,CRITICAL'
          exit-code: 1

  send-email-notification:
    runs-on: ubuntu-latest
    needs: docker-build-push
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Send email with scan reports
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: ${{ secrets.SMTP_SERVER }}
          server_port: ${{ secrets.SMTP_PORT }}
          username: ${{ secrets.SMTP_USERNAME }}
          password: ${{ secrets.SMTP_PASSWORD }}
          subject: 'CI/CD Pipeline Report - Flask App'
          to: ${{ secrets.TO_EMAIL }}
          from: GitHub Actions <no-reply@github.com>
          body: |
            CI/CD Pipeline completed for Flask App.
            - Build and Test: ${{ job.build-and-test.status }}
            - Filesystem Vulnerability Scan: ${{ job.vulnerability-scan.status }}
            - Docker Build and Image Scan: ${{ job.docker-build-push.status }}
            See attached reports for details.
          attachments: trivy-fs-results.sarif,trivy-image-results.json

  argocd-deploy:
    runs-on: ubuntu-latest
    needs: docker-build-push
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Checkout manifest repository
        uses: actions/checkout@v4
        with:
          repository: your-username/argocd-k8s-deploy
          token: ${{ secrets.GH_TOKEN }}
          path: manifests

      - name: Update Kubernetes manifest
        run: |
          sed -i 's|image: .*|image: ${{ secrets.DOCKER_USERNAME }}/flask-app:${{ github.sha }}|' manifests/deployment.yaml
          cd manifests
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add deployment.yaml
          git commit -m "Update image tag to ${{ github.sha }}"
          git push
